[tool.poetry]
name = "helyxium"
version = "0.1.0"  # Note: Keep in sync with src/__init__.py
description = "Universal VR bridge platform connecting all virtual reality worlds and platforms"
authors = ["Helyxium Team <team@helyxium.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
fastapi = "^0.115.0"
websockets = "^13.0"
requests = "^2.32.0"
pydantic = "^2.9.0"
cryptography = "^43.0.0"
numpy = "^1.26.0"
msgpack = "^1.0.7"
PyQt6 = "^6.7.0"
babel = "^2.16.0"
darkdetect = "^0.8.0"
openvr = "^1.26.7"
panda3d = "^1.10.14"
PyOpenGL = "^3.1.7"
PyOpenGL-accelerate = "^3.1.7"
moderngl = "^5.8.2"
pyrr = "^0.10.3"
pyusb = "^1.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
pyinstaller = "^6.1.0"
pre-commit = "^3.5.0"

[tool.poetry.scripts]
helyxium = "main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true

[tool.bandit]
exclude_dirs = [
    "tests/",
    "venv/",
    ".venv/",
    "build/",
    "dist/"
]
skips = ["B101", "B601"]