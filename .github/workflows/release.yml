name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: python build.py

      - name: Package artifacts (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd dist
          tar -czf helyxium-${{ matrix.platform }}.tar.gz Helyxium

      - name: Package artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd dist
          Compress-Archive -Path Helyxium -DestinationPath helyxium-windows.zip

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: helyxium-${{ matrix.platform }}
          path: |
            dist/*.tar.gz
            dist/*.zip

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            helyxium-linux/*.tar.gz
            helyxium-windows/*.zip
            helyxium-macos/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build package
        run: poetry build

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish
